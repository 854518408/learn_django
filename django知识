9.23
核心:高内聚(视图之间联系功能紧密,即模块底层之间联系紧密),低耦合(各司其职,模块与模块之间联系不紧密)
科技公司:总经理办公室 人事  财务  开发部  测试   运营



manage.py:项目整体的管理文件,通过它管理整个项目
项目同名文件夹:
	Setting.py:项目整体的配置文件夹
	urls.py:项目url配置文件
	wsgi.py:项目与web服务器的入口

debug=True: 意思就是服务器在不断重启,不需要手动重启,仅限于开发环境
	    在上线环境需要改回debug=False设置

模块文件(比如index):
admin.py:后台管理站点的配置
apps.py:当前子应用的信息
models.py:保存书写的数据库模型
tests.py:用来保存开发测试用例的,进行单元测试
views.py:书写逻辑的保存视图

如果新加入字段,需要设置默认值或者允许为空


9.24
pytharm 自带了mysql可视化图形界面,最右边第二个
一个视图函数可以当做一个接口,返回数据给服务器,服务器拼接报文
正则表达式以^开头,以$结尾
视图函数需要一个参数,承接框架给它的对象

简单的index视图函数流程
客户端发送请求,服务器接受请求报文,解析出请求的路径地址;
先在项目所在的同名文件夹下的urls.py中进行地址的匹配;
判断是否匹配成功,没有成功则报错返回404状态码,未找到指定的路径;
成功则找到对应的视图,执行视图的内容;无论成功与否,都会将响应返回给前端页面

render实际上返回的是django.template.loader.render_to_string（）和传递的参数。也是HttpReaponse对象

一对多添加到多的一方
#auto_now=False(表示保存对象时自动设置该字段为当前时间,用于做最后一次修改的时间戳)  
#auto_now_add=False(表示当前对象第一次被创建时自动设置当前时间,用于创建的时间戳)

on_delete=None,               # 删除关联表中的数据时,当前表与其关联的field的行为
on_delete=models.CASCADE,     # 删除关联数据,与之关联也删除
on_delete=models.DO_NOTHING,  # 删除关联数据,什么也不做
on_delete=models.PROTECT,     # 删除关联数据,引发错误ProtectedError
# models.ForeignKey('关联表', on_delete=models.SET_NULL, blank=True, null=True)
on_delete=models.SET_NULL,    # 删除关联数据,与之关联的值设置为null（前提FK字段需要设置为可空,一对一同理）
# models.ForeignKey('关联表', on_delete=models.SET_DEFAULT, default='默认值')
on_delete=models.SET_DEFAULT, # 删除关联数据,与之关联的值设置为默认值（前提FK字段需要设置默认值,一对一同理）
on_delete=models.SET,         # 删除关联数据,







